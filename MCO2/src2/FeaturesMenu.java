import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 * Features menu class
 */

public class FeaturesMenu extends javax.swing.JFrame {

    /**
     * Creates new form FeaturesMenu
     */
    public FeaturesMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">      
    
    /**
     * Initializes all components
     */
    private void initComponents() {

        Title = new javax.swing.JLabel();
        vmName = new javax.swing.JLabel();
        empty = new javax.swing.JLabel();
        tableScroll = new javax.swing.JScrollPane();
        vmTable = new javax.swing.JTable();
        type = new javax.swing.JLabel();
        selectBtn = new javax.swing.JButton();
        selectedLabel = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        dispenseLabel = new javax.swing.JLabel();
        specMenuBtn = new javax.swing.JButton();
        moneyPanel = new javax.swing.JPanel();
        insertBtn = new javax.swing.JButton();
        cashField = new javax.swing.JTextField();
        buyBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        transLabel = new javax.swing.JLabel();
        change = new javax.swing.JTextField();
        moneyLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        Title.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Title.setText("Features Menu");
        Title.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        vmName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        vmName.setText("Vending Machine:");

        empty.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        empty.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        empty.setText("No items yet...");

        vmTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Stock", "Calories", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vmTable.setShowGrid(false);
        tableScroll.setViewportView(vmTable);

        type.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        type.setText("Type:");

        selectBtn.setText("Select");

        back.setText("Back");

        dispenseLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        specMenuBtn.setText("Special Menu");

        insertBtn.setText("Insert Money");
        insertBtn.setFocusable(false);

        buyBtn.setText("Buy");

        cancelBtn.setText("Cancel");

        change.setEditable(false);
        change.setText("Change: ");
        change.setFocusable(false);

        moneyLabel.setText("Input money here:");

        javax.swing.GroupLayout moneyPanelLayout = new javax.swing.GroupLayout(moneyPanel);
        moneyPanel.setLayout(moneyPanelLayout);
        moneyPanelLayout.setHorizontalGroup(
            moneyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(moneyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(moneyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(moneyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cashField)
                    .addGroup(moneyPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(moneyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(moneyPanelLayout.createSequentialGroup()
                                .addComponent(buyBtn)
                                .addGap(27, 27, 27)
                                .addComponent(cancelBtn))
                            .addGroup(moneyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(insertBtn)
                                .addComponent(change, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(transLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addContainerGap())
        );
        moneyPanelLayout.setVerticalGroup(
            moneyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(moneyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(moneyLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cashField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(insertBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(change, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(moneyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buyBtn)
                    .addComponent(cancelBtn))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tableScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(moneyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(empty, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(vmName, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(back)
                                .addGap(182, 182, 182)
                                .addComponent(specMenuBtn)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selectBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(selectedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dispenseLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(33, 33, 33))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vmName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(type))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(empty)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tableScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(selectBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(selectedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(moneyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dispenseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(back)
                    .addComponent(specMenuBtn))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    /**
     * Sets up the table
     * @param vm current vending machine
     */

    public void setTable(VendingMachine vm){
        DefaultTableModel table = (DefaultTableModel) vmTable.getModel();
        
        for(Slot s : vm.getInventory()){

            if(s.getItemList().size() == 0){
                table.addRow(new Object[]{s.getName(), 0, s.getCalories() + ".0", s.getPrice() + ".0"});
            }
            
            else{
                String itemName = s.getName();
                int stock = s.getItemList().size() - 1;
                double calories = s.getCalories();
                double price = s.getPrice();
    
                table.addRow(new Object[]{itemName, stock, calories, price});
            }
        }
    }

    /**
     * Sets the vmName label to vending machine name
     * @param name name of current vending machine
     */

    public void setVendingMachineName(String name) {
        this.vmName.setText(name);
    }

    /**
     * Sets type label to the type of current vending machine
     * @param type
     */

    public void setType(String type) {
        this.type.setText(type);
    }

    /**
     * Sets the action listener
     * @param e action listener created from controller
     */
    
    public void setBack(ActionListener e) {
        this.back.addActionListener(e);
    }

    /**
     * Sets the action listener
     * @param e action listener created from controller
     */

    public void setSelectBtn(ActionListener e){
        selectBtn.addActionListener(e);
    }

    /**
     * Gets name column of the selected row
     * @return name of item
     */

    public String getRow(){
        return (String)vmTable.getValueAt(vmTable.getSelectedRow(), 0);
    }

    /**
     * Updates selected label
     * @param s name of current selected item
     */

    public void updateSelect(String s){
        selectedLabel.setText("Selected Item : " + s);
    }

    /**
     * Sets the action listener
     * @param e action listener created from controller
     */

    public void setInsertBtn(ActionListener e){
        insertBtn.addActionListener(e);
    }

    /**
     * Gets input from cashField and parses into integer
     * @return int value from cashField
     */

    public int getCashField(){
        return Integer.parseInt(cashField.getText());
    }

    /**
     * Updates transLabel
     * @param money money currently in machine
     */

    public void updateTransLabel(int money){
        transLabel.setText("Inserted : " + money + ".00 PHP");
    }

    /**
     * Sets transLabel to error message
     */

    public void errorTransLabel(){
        transLabel.setText("Invalid denomination");
    }

    /**
     * Hides transLabel
     */

    public void hideTransLabel(){
        transLabel.setText("");
    }

    /**
     * Gets the specMenuBtn
     * @return JButton object specMenuBtn
     */

    public JButton getSpecMenuBtn() {
        return this.specMenuBtn;
    }

    /**
     * Gets empty label
     * @return empty JLabel
     */

    public JLabel getEmptyLbl() {
        return this.empty;
    }

    /**
     * gets moneyLabel
     * @return JLabel moneyLabel
     */

    public JLabel getMoneyLbl() {
        return this.moneyLabel;
    }

    /**
     * Hides all buttons related to the buying function
     */

    public void hideBuyingFunction() {
        cashField.setVisible(false);
        buyBtn.setVisible(false);
        cancelBtn.setVisible(false);
        insertBtn.setVisible(false);
        moneyLabel.setVisible(false);
        transLabel.setVisible(false);
    }
    
    /**
     * Shows all button related to the buying function
     */

    public void showBuyingFunction() {
        cashField.setVisible(true);
        buyBtn.setVisible(true);
        cancelBtn.setVisible(true);
        insertBtn.setVisible(true);
        moneyLabel.setVisible(true);
        transLabel.setVisible(true);
    }

    /**
     * Gets change text field
     * @return JTextField change
     */

    public JTextField getChangeField() {
        return this.change;
    }

    /**
     * Sets the action listener
     * @param e action listener created from controller
     */

    public void setCancelBtn(ActionListener e) {
        this.cancelBtn.addActionListener(e);
    }

    /**
     * Updates the change label
     * @param change amount of change dispensed
     */

    public void setChangeLbl(String change) {
        this.change.setText("Change: " + change);
    }

    /**
     * Sets dispense label
     * @param str string to be displayed by dispenseLabel
     */

    public void setDispenseLbl(String str) {
        dispenseLabel.setText(str);
    }

    /**
     * Gets cashField
     * @return JTextField cashField
     */

    public JTextField getCashFieldTF() {
        return this.cashField;
    }

    /**
     * Sets the action listener
     * @param e action listener created from controller
     */

    public void setBuyBtn(ActionListener e) {
        this.buyBtn.addActionListener(e);
    }

    /**
     * Resets table
     */

    public void removeTable() {
        vmTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Stock", "Calories", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vmTable.setShowGrid(false);
        tableScroll.setViewportView(vmTable);
    }
    
    /**
     * Sets the action listener
     * @param e action listener created from controller
     */

    public void setSpecBtn(ActionListener e){
        specMenuBtn.addActionListener(e);
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel Title;
    private javax.swing.JButton back;
    private javax.swing.JButton buyBtn;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JTextField cashField;
    private javax.swing.JTextField change;
    private javax.swing.JLabel dispenseLabel;
    private javax.swing.JLabel empty;
    private javax.swing.JButton insertBtn;
    private javax.swing.JLabel moneyLabel;
    private javax.swing.JPanel moneyPanel;
    private javax.swing.JButton selectBtn;
    private javax.swing.JLabel selectedLabel;
    private javax.swing.JButton specMenuBtn;
    private javax.swing.JScrollPane tableScroll;
    private javax.swing.JLabel transLabel;
    private javax.swing.JLabel type;
    private javax.swing.JLabel vmName;
    private javax.swing.JTable vmTable;
    // End of variables declaration                    
}
