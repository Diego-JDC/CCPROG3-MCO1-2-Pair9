import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 * Contains all components for special menu
 */

public class SpecMenu extends javax.swing.JFrame {

    /**
     * Creates new form SpecMenu
     */
    public SpecMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">     
    
    /**
     * Initializes all components
     */
    private void initComponents() {

        specTitle = new javax.swing.JPanel();
        specVMTitle = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        powderLabel = new javax.swing.JLabel();
        colorLabel = new javax.swing.JLabel();
        toppingBox = new javax.swing.JComboBox<>();
        flavorLabel = new javax.swing.JLabel();
        pToppingBox = new javax.swing.JComboBox<>();
        colorBox = new javax.swing.JComboBox<>();
        flavorBox = new javax.swing.JComboBox<>();
        toppingLabel = new javax.swing.JLabel();
        buildLabel = new javax.swing.JLabel();
        confirmBtn = new javax.swing.JButton();
        specMessage = new javax.swing.JLabel();
        stockLabel = new javax.swing.JLabel();
        flavorStock = new javax.swing.JLabel();
        colorStock = new javax.swing.JLabel();
        toppingStock = new javax.swing.JLabel();
        powderStock = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        moneyPanel = new javax.swing.JPanel();
        insertBtn = new javax.swing.JButton();
        cashField = new javax.swing.JTextField();
        buyBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        transLabel = new javax.swing.JLabel();
        change = new javax.swing.JTextField();
        moneyLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        prepMsg = new javax.swing.JTextArea();
        statusLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        specVMTitle.setFont(new java.awt.Font("Segoe UI", 0, 22)); // NOI18N
        specVMTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        specVMTitle.setText("Special Vending Machine Menu");

        javax.swing.GroupLayout specTitleLayout = new javax.swing.GroupLayout(specTitle);
        specTitle.setLayout(specTitleLayout);
        specTitleLayout.setHorizontalGroup(
            specTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, specTitleLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(specVMTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(144, 144, 144))
        );
        specTitleLayout.setVerticalGroup(
            specTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, specTitleLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(specVMTitle)
                .addContainerGap())
        );

        powderLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        powderLabel.setText("Powder Topping");

        colorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        colorLabel.setText("Food Color");

        flavorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        flavorLabel.setText("Flavor Extract");

        toppingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        toppingLabel.setText("Topping");

        buildLabel.setText("Build your own Ice Scramble!");

        confirmBtn.setText("Confirm Selection");

        specMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        stockLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stockLabel.setText("Stock");

        flavorStock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        colorStock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        toppingStock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        powderStock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        back.setText("Back");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(buildLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(stockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(confirmBtn)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(43, 43, 43)
                                                .addComponent(toppingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(powderLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(colorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(flavorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(flavorBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(pToppingBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(colorBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(toppingBox, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(flavorStock, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(colorStock, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(powderStock, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(toppingStock, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 8, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(back)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(specMessage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {colorStock, flavorStock, powderStock, toppingStock});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {colorBox, flavorBox, pToppingBox, toppingBox});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buildLabel)
                    .addComponent(stockLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(toppingBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(toppingLabel))
                    .addComponent(toppingStock, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(powderStock, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pToppingBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(powderLabel)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(colorBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(colorLabel))
                    .addComponent(colorStock, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(flavorBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(flavorLabel))
                    .addComponent(flavorStock, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(confirmBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(specMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(back)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {colorStock, flavorStock, powderStock, toppingStock});

        insertBtn.setText("Insert Money");
        insertBtn.setFocusable(false);

        buyBtn.setText("Buy");

        cancelBtn.setText("Cancel");

        change.setEditable(false);
        change.setText("Change: ");
        change.setFocusable(false);

        moneyLabel.setText("Input money here:");

        prepMsg.setColumns(20);
        prepMsg.setRows(5);
        jScrollPane1.setViewportView(prepMsg);

        javax.swing.GroupLayout moneyPanelLayout = new javax.swing.GroupLayout(moneyPanel);
        moneyPanel.setLayout(moneyPanelLayout);
        moneyPanelLayout.setHorizontalGroup(
            moneyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(moneyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(moneyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(moneyPanelLayout.createSequentialGroup()
                        .addGroup(moneyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(moneyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(moneyPanelLayout.createSequentialGroup()
                                .addComponent(cashField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(transLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(moneyPanelLayout.createSequentialGroup()
                                .addGroup(moneyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(moneyPanelLayout.createSequentialGroup()
                                        .addComponent(buyBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cancelBtn))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 26, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(moneyPanelLayout.createSequentialGroup()
                        .addComponent(insertBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(change, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))))
        );
        moneyPanelLayout.setVerticalGroup(
            moneyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(moneyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(moneyLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(moneyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cashField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(moneyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertBtn)
                    .addComponent(change, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(moneyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(statusLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(moneyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buyBtn)
                        .addComponent(cancelBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(specTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(moneyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(specTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(moneyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold> 

    //SET UP ACTION LISTENERS

    /**
     * Adds action listener to button
     * @param e action listener
     */
    
    public void setBack(ActionListener e){
        back.addActionListener(e);
    }

    /**
     * Adds action listener to button
     * @param e action listener
     */

    public void setBuyBtn(ActionListener e) {
        buyBtn.addActionListener(e);
    }

    /**
     * Adds action listener to button
     * @param e action listener
     */

    public void setCancelBtn(ActionListener e) {
        cancelBtn.addActionListener(e);
    }

    /**
     * Adds action listener to button
     * @param e action listener
     */

    public void setConfirmBtn(ActionListener e) {
        confirmBtn.addActionListener(e);
    }

    /**
     * Adds action listener to button
     * @param e action listener
     */

    public void setInsertBtn(ActionListener e) {
        insertBtn.addActionListener(e);
    }

    /**
     * Adds action listener to button
     * @param e action listener
     */
    
    public void setFlavorBox(ActionListener e) {
        flavorBox.addActionListener(e);
    }

    /**
     * Adds action listener to button
     * @param e action listener
     */

    public void setColorBox(ActionListener e) {
        colorBox.addActionListener(e);
    }

    /**
     * Adds action listener to button
     * @param e action listener
     */

    public void setPToppingBox(ActionListener e) {
        pToppingBox.addActionListener(e);
    }

    /**
     * Adds action listener to button
     * @param e action listener
     */

    public void setToppingBox(ActionListener e) {
        toppingBox.addActionListener(e);
    }
    

    //GETTERS

    public JComboBox<String> getColorBox() {
        return this.colorBox;
    }

    public JComboBox<String> getFlavorBox() {
        return this.flavorBox;
    }

    public JComboBox<String> getPToppingBox() {
        return this.pToppingBox;
    }

    public JComboBox<String> getToppingBox() {
        return this.toppingBox;
    }

    public JLabel getColorStock() {
        return this.colorStock;
    }

    public JLabel getFlavorStock() {
        return this.flavorStock;
    }

    public JLabel getPToppingStock() {
        return this.powderStock;
    }

    public JLabel getToppingStock() {
        return this.toppingStock;
    }

    public JLabel getSpecMsgLbl() {
        return this.specMessage;
    }

    public JLabel getTransLbl() {
        return this.transLabel;
    }

    public JTextField getCashField() {
        return this.cashField;
    }

    public JTextField getChangeTF() {
        return this.change;
    }

    public JLabel getStatusLbl() {
        return this.statusLabel;
    }

    public JTextArea getPrepMsgTA() {
        return this.prepMsg;
    }

    //ETC FUNCTIONS

    /**
     * Shows all labels in specMenu
     */

    public void showConstLbls() {
        buildLabel.setVisible(true);
        colorLabel.setVisible(true);
        flavorLabel.setVisible(true);
        moneyLabel.setVisible(true);
        powderLabel.setVisible(true);
        stockLabel.setVisible(true);
        moneyLabel.setVisible(true);
    }
    
    /**
     * Sets up combo box for colorBox
     * @param list list of slot objects
     */

    public void setColorBoxList(ArrayList<Slot> list) {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        if(list.isEmpty()) {
            model.addElement("Empty");
        } else {
            model.addElement("None");
            for(Slot s : list) {
                if(!s.getItemList().isEmpty()) {
                    if(((Ingredient)s.getItemList().get(0)).getType().equals("Food Color")) {
                        model.addElement(s.getName());
                    }
                }
            }
        }
        colorBox.setModel(model);
    }

    /**
     * Sets up combo box for flavorBox
     * @param list list of slot objects
     */

    public void setFlavorBoxList(ArrayList<Slot> list) {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        if(list.isEmpty()) {
            model.addElement("Empty");
        } else {
            model.addElement("None");
            for(Slot s : list) {
                if(!s.getItemList().isEmpty()) {
                    if(((Ingredient)s.getItemList().get(0)).getType().equals("Flavor Extract")) {
                        model.addElement(s.getName());
                    }
                }
            }
        }
        flavorBox.setModel(model);
    }

    /**
     * Sets up combo box for pToppingBox
     * @param list list of slot objects
     */

    public void setPToppingBoxList(ArrayList<Slot> list) {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        if(list.isEmpty()) {
            model.addElement("Empty");
        } else {
            model.addElement("None");
            for(Slot s : list) {
                if(!s.getItemList().isEmpty()) {
                    if(((Ingredient)s.getItemList().get(0)).getType().equals("Powdered Topping")) {
                        model.addElement(s.getName());
                    }
                }
            }
        }
        pToppingBox.setModel(model);
    }

    /**
     * Sets up combo box for toppingBox
     * @param list list of slot objects
     */

    public void setToppingList(ArrayList<Slot> list) {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        if(list.isEmpty()) {
            model.addElement("Empty");
        } else {
            model.addElement("None");
            for(Slot s : list) {
                if(!s.getItemList().isEmpty()) {
                    if(((Ingredient)s.getItemList().get(0)).getType().equals("Topping")) {
                        model.addElement(s.getName());
                    }
                }
            }
        }
        toppingBox.setModel(model);
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton back;
    private javax.swing.JLabel buildLabel;
    private javax.swing.JButton buyBtn;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JTextField cashField;
    private javax.swing.JTextField change;
    private javax.swing.JComboBox<String> colorBox;
    private javax.swing.JLabel colorLabel;
    private javax.swing.JLabel colorStock;
    private javax.swing.JButton confirmBtn;
    private javax.swing.JComboBox<String> flavorBox;
    private javax.swing.JLabel flavorLabel;
    private javax.swing.JLabel flavorStock;
    private javax.swing.JButton insertBtn;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel moneyLabel;
    private javax.swing.JPanel moneyPanel;
    private javax.swing.JComboBox<String> pToppingBox;
    private javax.swing.JLabel powderLabel;
    private javax.swing.JLabel powderStock;
    private javax.swing.JTextArea prepMsg;
    private javax.swing.JLabel specMessage;
    private javax.swing.JPanel specTitle;
    private javax.swing.JLabel specVMTitle;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel stockLabel;
    private javax.swing.JComboBox<String> toppingBox;
    private javax.swing.JLabel toppingLabel;
    private javax.swing.JLabel toppingStock;
    private javax.swing.JLabel transLabel;
    // End of variables declaration                   
}
